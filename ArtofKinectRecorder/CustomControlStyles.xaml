<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Custom="http://schemas.microsoft.com/surface/2008">
	<!-- Resource dictionary entries should be defined here. -->
<!-- Base Grid style for 55 dpi -->
	<Style TargetType="{x:Type Control}" x:Key="ControlBaseStyle">
		<Setter Property="FocusVisualStyle"	
			Value="{x:Null}"/>
		<Setter Property="SnapsToDevicePixels"
			Value="False"/>
		<Setter Property="FontFamily"
			Value="Segoe360"/>
		<Setter Property="FontWeight"
			Value="Normal"/>
		<Setter Property="FontSize"
			Value="17"/>
		<Setter Property="Padding"
			Value="0,0,0,0"/>
		<Setter Property="MinHeight"
			Value="38"/>
		<Setter Property="MinWidth"
			Value="38"/>
		<Setter Property="Margin"
			Value="0"/>
		<Setter Property="HorizontalContentAlignment"
			Value="Center"/>
		<Setter Property="VerticalContentAlignment"
			Value="Center"/>
		<Setter Property="BorderThickness"
			Value="2"/>
	</Style>
	<!-- public section -->
	<SolidColorBrush x:Key="ControlHitAreaBrush"    
		Color="#00FFFFFF"/>
	<!-- Radio Button -->
	<Style x:Key="GridSurfaceRadioButtonStyle" TargetType="{x:Type Custom:SurfaceRadioButton}"
		BasedOn="{StaticResource ControlBaseStyle}">
		<Setter Property="Background"   
			Value="{DynamicResource {x:Static Custom:SurfaceColors.ButtonBackgroundBrushKey}}"/>
		<Setter Property="Foreground" 
			Value="{DynamicResource {x:Static Custom:SurfaceColors.ButtonForegroundBrushKey}}"/>
		<Setter Property="BorderBrush"
			Value="{DynamicResource {x:Static Custom:SurfaceColors.ControlBorderBrushKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Custom:SurfaceRadioButton}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Checked">
							<DoubleAnimation Duration="00:00:00.0100000"
								Storyboard.TargetName="Checkmark"
								Storyboard.TargetProperty="Opacity"
								To="1" />
						</Storyboard>
						<Storyboard x:Key="Unchecked">
							<DoubleAnimation Duration="00:00:00.1500000"
								Storyboard.TargetName="Checkmark"
								Storyboard.TargetProperty="Opacity" 
								To="0" />
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="50"/>
							<ColumnDefinition Width="10"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Rectangle  Grid.ColumnSpan="3" 
							x:Name="hitArea"
							Fill="{StaticResource ControlHitAreaBrush}" 
							Width="{TemplateBinding Width}" 
							Height="{TemplateBinding Height}"/>
						<BulletDecorator Grid.Column="0"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							x:Name="bulletDecorator">
							<BulletDecorator.Bullet>
								<Grid Margin="5">
									<Border x:Name="RadioButtonRect"                                        
										BorderBrush="{DynamicResource {x:Static Custom:SurfaceColors.ButtonForegroundBrushKey}}"  
										BorderThickness="{TemplateBinding BorderThickness}" 
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										CornerRadius="8"
										Height="16"
										Width="16"/>
									<Border x:Name="Checkmark"                                         
										Background="{DynamicResource {x:Static Custom:SurfaceColors.ButtonForegroundBrushKey}}"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
										CornerRadius="5" 
										Opacity="0"                                              
										Height="10" 
										Width="10"/>
									<Ellipse x:Name="ThreeStateMark"
										Fill="{DynamicResource {x:Static Custom:SurfaceColors.ButtonForegroundBrushKey}}"	 
										Opacity="0"
										Width="6"
										Height="6"/>
								</Grid>
							</BulletDecorator.Bullet>
						</BulletDecorator>
						<ContentPresenter x:Name="Content"
							Grid.Column="2"
							ClipToBounds="False"
							Margin="0"
							HorizontalAlignment="Left"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsThreeState"
									Value="True" />
								<Condition Property="IsChecked"
									Value="{x:Null}" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Checkmark"
								Property="Opacity"
								Value="0"/>
							<Setter TargetName="ThreeStateMark"	
								Property="Opacity"
								Value="1"/>
						</MultiTrigger>
						<Trigger Property="IsChecked"
							Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource Checked}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource Unchecked}" />
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsPressed"
							Value="True">
							<Setter Property="Background"
								Value="{DynamicResource {x:Static Custom:SurfaceColors.ControlBackgroundPressedBrushKey}}"/>
							<Setter Property="BorderBrush"
								Value="{DynamicResource {x:Static Custom:SurfaceColors.ControlBorderPressedBrushKey}}"/>
							<Setter Property="Foreground"
								Value="{DynamicResource {x:Static Custom:SurfaceColors.ControlForegroundPressedBrushKey}}"/>
							<Setter TargetName="Checkmark"
								Property="Background"
								Value="{DynamicResource {x:Static Custom:SurfaceColors.BulletPressedBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsEnabled"
							Value="False">
							<Setter Property="Background"
								Value="{DynamicResource {x:Static Custom:SurfaceColors.ControlBackgroundDisabledBrushKey}}"/>
							<Setter Property="Foreground"
								Value="{DynamicResource {x:Static Custom:SurfaceColors.ControlForegroundDisabledBrushKey}}"/>
							<Setter Property ="BorderBrush"
								Value ="{DynamicResource {x:Static Custom:SurfaceColors.ControlBorderDisabledBrushKey}}"/>
							<Setter TargetName="Checkmark"
								Property ="Background"
								Value ="{DynamicResource {x:Static Custom:SurfaceColors.BulletDisabledBrushKey}}"/>
							<Setter TargetName="ThreeStateMark"
								Property ="Fill"
								Value ="{DynamicResource {x:Static Custom:SurfaceColors.BulletDisabledBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="GridSurfaceButtonStyle"
		TargetType="{x:Type Custom:SurfaceButton}" 
		BasedOn="{StaticResource ControlBaseStyle}">
		<Setter Property="IsTabStop"
			Value="False" />
		<Setter Property="Focusable"
			Value="True" />
		<Setter Property="Background"
			Value="{DynamicResource {x:Static Custom:SurfaceColors.ButtonBackgroundBrushKey}}" />
		<Setter Property="Foreground"
			Value="{DynamicResource {x:Static Custom:SurfaceColors.ButtonForegroundBrushKey}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Custom:SurfaceButton}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Press">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
								Storyboard.TargetName="PressOverlay"
								Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000"
									Value="1" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="Release">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
								Storyboard.TargetName="PressOverlay"
								Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1500000"
									Value="0" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid x:Name="Grid"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
						<Rectangle  x:Name="ButtonBody"
							Fill ="{TemplateBinding Background}"
							SnapsToDevicePixels ="{TemplateBinding SnapsToDevicePixels}"/>
						<Rectangle  x:Name="PressOverlay"
							Opacity="0"
							Fill ="{DynamicResource {x:Static Custom:SurfaceColors.ButtonBackgroundPressedBrushKey}}" 							             
							SnapsToDevicePixels ="{TemplateBinding SnapsToDevicePixels}"/>
						<ContentPresenter  x:Name="Content"
							Margin="{TemplateBinding Padding}"  
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"		                                                                           
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
					</Grid>

					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed"
							Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource Press}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource Release}" />
							</Trigger.ExitActions>
							<Setter Property="Foreground"
								Value="{DynamicResource {x:Static Custom:SurfaceColors.ButtonForegroundPressedBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsEnabled"
							Value="False">
							<Setter Property="Fill"
								Value="{DynamicResource {x:Static Custom:SurfaceColors.ButtonBackgroundDisabledBrushKey}}"
								TargetName="ButtonBody" />
							<Setter Property="Foreground"
								Value="{DynamicResource {x:Static Custom:SurfaceColors.ButtonForegroundDisabledBrushKey}}"/>
							<Setter Property="Opacity"
								Value="0.33"
								TargetName="Content" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="GridSurfaceCheckBoxStyle" TargetType="{x:Type Custom:SurfaceCheckBox}"
		BasedOn ="{StaticResource ControlBaseStyle}">
		<Setter Property="Background" 
			Value="{DynamicResource {x:Static Custom:SurfaceColors.ControlBackgroundBrushKey}}"/>
		<Setter Property="Foreground" 
			Value="{DynamicResource {x:Static Custom:SurfaceColors.ControlForegroundBrushKey}}"/>
		<Setter Property="BorderBrush" 
			Value="{DynamicResource {x:Static Custom:SurfaceColors.ControlBorderBrushKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Custom:SurfaceCheckBox}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Checked">
							<DoubleAnimation Duration="00:00:00.0100000"
								Storyboard.TargetName="Checkmark"
								Storyboard.TargetProperty="Opacity"
								To="1" />
						</Storyboard>
						<Storyboard x:Key="Unchecked">
							<DoubleAnimation Duration="00:00:00.1500000"
								Storyboard.TargetName="Checkmark"
								Storyboard.TargetProperty="Opacity" 
								From="0.4"
								To="0" />
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="50"/>
							<ColumnDefinition Width="10"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Rectangle  Grid.ColumnSpan="3" 
							x:Name="hitArea"								
							Fill="#00FFFFFF" 
							Width="{TemplateBinding Width}" 
							Height="{TemplateBinding Height}"/>
						<BulletDecorator Grid.Column="0"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							x:Name="bulletDecorator">
							<BulletDecorator.Bullet>
								<Border x:Name="CheckButtonRect"
									Margin="0,0,0,0"
									Width="16"
									Height="16"
									BorderThickness="{TemplateBinding BorderThickness}"
									BorderBrush="{DynamicResource {x:Static Custom:SurfaceColors.ButtonForegroundBrushKey}}">
									<Grid>
										<Path x:Name="Checkmark"
											StrokeEndLineCap="Flat"
											Fill="{x:Null}"
											Stroke="{DynamicResource {x:Static Custom:SurfaceColors.ButtonForegroundBrushKey}}"
											StrokeStartLineCap="Flat"
											StrokeThickness="2"
											Width="10"
											Height="10"
											Data="M0,24 L12,0 M0,0 L12,24"
											Opacity="0"
											Stretch="Fill" />
										<Rectangle x:Name="ThreeStateMark" 
											Opacity="0"
											Fill="{DynamicResource {x:Static Custom:SurfaceColors.ButtonForegroundBrushKey}}"	                           
											Width="6"
											Height="6" />
									</Grid>
								</Border>
							</BulletDecorator.Bullet>
						</BulletDecorator>
						<ContentPresenter Grid.Column="2"
							x:Name="Content"
							Margin="{TemplateBinding Padding}"                                       
							HorizontalAlignment="Left"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsThreeState"
									Value="True" />
								<Condition Property="IsChecked"
									Value="{x:Null}" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Checkmark"
								Property="Opacity"
								Value="0"/>
							<Setter TargetName="ThreeStateMark"	
								Property="Opacity"
								Value="1"/>
						</MultiTrigger>
						<Trigger Property="IsChecked"
							Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource Checked}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource Unchecked}" />
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsPressed"
							Value="True">
							<Setter Property="Background"
								Value="{DynamicResource {x:Static Custom:SurfaceColors.ControlBackgroundPressedBrushKey}}"/>
							<Setter Property="BorderBrush"
								Value="{DynamicResource {x:Static Custom:SurfaceColors.ControlBorderPressedBrushKey}}"/>
							<Setter Property="Foreground"
								Value="{DynamicResource {x:Static Custom:SurfaceColors.ControlForegroundPressedBrushKey}}"/>
							<Setter TargetName="Checkmark"
								Property="Stroke"
								Value="{DynamicResource {x:Static Custom:SurfaceColors.BulletPressedBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsEnabled"
							Value="False">
							<Setter Property ="BorderBrush"
								Value ="{DynamicResource {x:Static Custom:SurfaceColors.ControlBorderDisabledBrushKey}}"/>
							<Setter Property="Background"
								Value="{DynamicResource {x:Static Custom:SurfaceColors.ControlBackgroundDisabledBrushKey}}"/>
							<Setter Property="Foreground"
								Value="{DynamicResource {x:Static Custom:SurfaceColors.ControlForegroundDisabledBrushKey}}"/>
							<Setter TargetName="Checkmark"
								Property="Stroke"
								Value ="{DynamicResource {x:Static Custom:SurfaceColors.BulletDisabledBrushKey}}"/>
							<Setter TargetName="ThreeStateMark"
								Property ="Fill"
								Value ="{DynamicResource {x:Static Custom:SurfaceColors.BulletDisabledBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

</ResourceDictionary>